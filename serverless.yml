service: aws-node-serverless-stripe-webhook

frameworkVersion: '3'

provider:
  stage: ${opt:stage, self:custom.defaultStage}
  name: aws
  region: ap-northeast-1
  runtime: nodejs16.x
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - ssm:GetParameter
            - ssm:GetParameters
          Resource:
            - !Sub arn:aws:ssm:ap-northeast-1:${AWS::AccountId}:parameters${file(./env/${self:provider.stage}.json):SSM_PARAMETER_NAME_STRIPE_SECRET_KEY}
            - !Sub arn:aws:ssm:ap-northeast-1:${AWS::AccountId}:parameters${file(./env/${self:provider.stage}.json):SSM_PARAMETER_NAME_STRIPE_ENDPOINT_SECRET}
        - Effect: Allow
          Action:
            - kinesis:PutRecord
          Resource:
            - !Sub arn:aws:kinesis:ap-northeast-1:${AWS::AccountId}:stream/${file(./env/${self:provider.stage}.json):KINESIS_STREAM_NAME}

plugins:
  - serverless-webpack
  - serverless-plugin-ifelse
  - serverless-offline-kinesis
  - serverless-offline

custom:
  defaultStage: local
  webpack:
    includeModules: true
    packager: 'yarn'
  serverless-offline-kinesis:
    endpoint: http://localhost:4566
    region: ${self:provider.region}
    accessKeyId: local
    secretAccessKey: local
  serverlessIfElse:
    - If: '"${self:provider.stage}" == "local"'
      Set:
        functions.kinesisConsumer.events.0.stream.arn: arn:aws:kinesis:${self:provider.region}:000000000000:stream/${file(./env/${self:provider.stage}.json):KINESIS_STREAM_NAME}

functions:
  stripe2kinesis:
    name: stripe2kinesis-${sls:stage}
    handler: src/stripe2kinesis.handler
    timeout: 5
    environment:
      STAGE: ${self:provider.stage}
      REGION: ${self:provider.region}
      SSM_PARAMETER_NAME_STRIPE_SECRET_KEY: ${file(./env/${self:provider.stage}.json):SSM_PARAMETER_NAME_STRIPE_SECRET_KEY}
      SSM_PARAMETER_NAME_STRIPE_ENDPOINT_SECRET: ${file(./env/${self:provider.stage}.json):SSM_PARAMETER_NAME_STRIPE_ENDPOINT_SECRET}
      KINESIS_STREAM_NAME: ${file(./env/${self:provider.stage}.json):KINESIS_STREAM_NAME}
    events:
      - http:
          method: post
          path: /webhook
          authorizer:
            name: authorizerFunc
            identitySource: method.request.header.Stripe-Signature
            type: request
  authorizerFunc:
    name: authorizerFunc-${sls:stage}
    handler: src/authorizerFunc.handler
  # Kinesis„ÅÆConsumer
  kinesisConsumer:
    name: kinesisConsumer
    handler: support/kinesis-consumer.handler
    events:
      - stream:
          type: kinesis
          arn:
            Fn::Join:
              - ':'
              - - arn:aws:kinesis:ap-northeast-1
                - !Sub ${AWS::AccountId}
                - stream/${file(./env/${self:provider.stage}.json):KINESIS_STREAM_NAME}
          batchSize: 100
          batchWindow: 5
          startingPosition: LATEST
