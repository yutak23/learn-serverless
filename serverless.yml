service: aws-node-serverless-project

frameworkVersion: '3'

provider:
  stage: ${opt:stage, self:custom.defaultStage}
  name: aws
  region: ap-northeast-1
  runtime: nodejs16.x
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - ses:SendEmail
            - ses:SendRawEmail
          Resource:
            - !Sub arn:aws:ses:ap-northeast-1:${AWS::AccountId}:identity/${param:fromEmailAddress}
            - !Sub arn:aws:ses:ap-northeast-1:${AWS::AccountId}:identity/${param:toEmailAddress}
        - Effect: Allow
          Action:
            - dynamodb:GetItem
            - dynamodb:PutItem
          Resource:
            - !GetAtt sqsToSeSQueueTable.Arn

plugins:
  - serverless-webpack
  - serverless-offline-sqs
  - serverless-offline
  - serverless-offline-ses-v2

custom:
  defaultStage: local
  webpack:
    includeModules: true
    packager: 'yarn'
  serverless-offline-sqs:
    autoCreate: true
    apiVersion: '2012-11-05'
    endpoint: http://localhost:4566
    region: ap-northeast-1
    accessKeyId: root
    secretAccessKey: root
  serverless-offline-ses-v2:
    port: 8005

resources:
  Resources:
    sqsToSesQqueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: sqs2ses-queue-${sls:stage}
        MaximumMessageSize: 1024
        RedrivePolicy:
          deadLetterTargetArn: !GetAtt sqsToSesDeadQueue.Arn
          maxReceiveCount: 3
    sqsToSesDeadQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: sqs2ses-dead-queue-${sls:stage}
        MaximumMessageSize: 1024
        MessageRetentionPeriod: 1209600 # 14 days
    sqsToSeSQueueTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: sqs2ses-queue-table-${sls:stage}
        AttributeDefinitions:
          - AttributeName: md5
            AttributeType: S
        KeySchema:
          - AttributeName: md5
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TimeToLiveSpecification:
          AttributeName: ttl
          Enabled: true

functions:
  hello:
    name: hello-lambda-${sls:stage}
    handler: ./src/lambda.handler
    timeout: 5
    environment:
      ENV: ${file(./env/${self:provider.stage}.json):ENV}
  sqs2ses:
    name: ses2ses-${sls:stage}
    handler: src/sqs2ses.handler
    timeout: 5
    environment:
      STAGE: ${self:provider.stage}
      REGION: ${self:provider.region}
      SES_IDENTITY_ARN: !Sub arn:aws:ses:ap-northeast-1:${AWS::AccountId}:identity/${param:fromEmailAddress}
    events:
      - sqs:
          arn: !GetAtt sqsToSesQqueue.Arn
