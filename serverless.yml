service: aws-node-serverless-stripe-webhook

frameworkVersion: '3'

provider:
  stage: ${opt:stage, self:custom.defaultStage}
  name: aws
  region: ap-northeast-1
  runtime: nodejs16.x
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - ssm:GetParameter
            - ssm:GetParameters
          Resource:
            - !Sub arn:aws:ssm:ap-northeast-1:${AWS::AccountId}:parameters${file(./env/${self:provider.stage}.json):SSM_PARAMETER_NAME_STRIPE_SECRET_KEY}
            - !Sub arn:aws:ssm:ap-northeast-1:${AWS::AccountId}:parameters${file(./env/${self:provider.stage}.json):SSM_PARAMETER_NAME_STRIPE_ENDPOINT_SECRET}

plugins:
  - serverless-webpack
  - serverless-offline

custom:
  defaultStage: local
  webpack:
    includeModules: true
    packager: 'yarn'

functions:
  stripe2kinesis:
    name: stripe2kinesis-${sls:stage}
    handler: src/stripe2kinesis.handler
    timeout: 5
    environment:
      STAGE: ${self:provider.stage}
      REGION: ${self:provider.region}
      SSM_PARAMETER_NAME_STRIPE_SECRET_KEY: ${file(./env/${self:provider.stage}.json):SSM_PARAMETER_NAME_STRIPE_SECRET_KEY}
      SSM_PARAMETER_NAME_STRIPE_ENDPOINT_SECRET: ${file(./env/${self:provider.stage}.json):SSM_PARAMETER_NAME_STRIPE_ENDPOINT_SECRET}
    events:
      - http:
          method: post
          path: /webhook
          authorizer:
            name: authorizerFunc
            identitySource: method.request.header.Stripe-Signature
            type: request
  authorizerFunc:
    name: authorizerFunc-${sls:stage}
    handler: src/authorizerFunc.handler
